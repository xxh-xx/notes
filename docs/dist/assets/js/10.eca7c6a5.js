(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{406:function(s,t,a){"use strict";a.r(t);var n=a(31),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"css3-动画"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css3-动画"}},[s._v("#")]),s._v(" CSS3 动画")]),s._v(" "),a("h2",{attrs:{id:"了解-css-的关键帧和动画是如何工作的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#了解-css-的关键帧和动画是如何工作的"}},[s._v("#")]),s._v(" 了解 CSS 的关键帧和动画是如何工作的")]),s._v(" "),a("p",[s._v("如果要给元素添加动画，你需要了解 animation 属性以及 "),a("code",[s._v("@keyframes")]),s._v(" 规则。 animation 属性控制动画的外观，"),a("code",[s._v("@keyframes")]),s._v(" 规则控制动画中各阶段的变化。 总共有 8 个 animation 属性。 为了便于理解，本挑战中我们只会暂时涉及到两个最常用的属性。")]),s._v(" "),a("p",[a("code",[s._v("animation-name")]),s._v(" 用来设置动画的名称，也就是我们稍后要在 "),a("code",[s._v("@keyframes")]),s._v(" 里用到的名称。")]),s._v(" "),a("p",[a("code",[s._v("animation-duration")]),s._v(" 设置动画所花费的时间。")]),s._v(" "),a("p",[a("code",[s._v("@keyframes")]),s._v(" 可以通过设置特定时间点的行为来创建动画。 为此，我们只需要给持续时间内的特定帧（从 0% 到 100%）加上 CSS 规则。 如果用一部电影来做类比，那么 CSS 里面的 0% 关键帧就像是电影里面的开场镜头；100% 关键帧就像是电影里的片尾，就是那个之后会出现演职人员列表的片尾。 在动画设定的时间内，CSS 会根据关键帧的规则来给元素添加动画效果。 100% 位置的 CSS 属性就是元素最后的样子，相当于电影里的演职员表或者鸣谢镜头。 然后CSS 应用魔法来在给定的时间内转换元素以使其脱离场景。 下面举例说明 "),a("code",[s._v("@keyframes")]),s._v(" 和动画属性的用法：")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v("#anim")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("animation-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" colorful"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("animation-duration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 3s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[s._v("@keyframes")]),s._v(" colorful")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v("0%")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("background-color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" blue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v("100%")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("background-color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("id 为 "),a("code",[s._v("anim")]),s._v("的元素，我们在代码中将它的 "),a("code",[s._v("animation-name")]),s._v(" 设置为 "),a("code",[s._v("colorful")]),s._v("，同时设置 "),a("code",[s._v("animation-duration")]),s._v(" 为 3 秒。 然后我们把 "),a("code",[s._v("@keyframes")]),s._v(" 规则添加到名为 colorful 的动画属性上。 在动画开始时（0%）的背景颜色为蓝色，在动画结束时（100%）的背景颜色为黄色。 注意我们不只可以设置开始和结束，而是从 0% 到 100% 间的任意位置都可以设置。")]),s._v(" "),a("h2",{attrs:{id:"使用css动画更改按钮的悬停状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用css动画更改按钮的悬停状态"}},[s._v("#")]),s._v(" 使用CSS动画更改按钮的悬停状态")]),s._v(" "),a("p",[s._v("你可以在按钮悬停时使用"),a("code",[s._v("@keyframes")]),s._v(" 改变按钮的颜色。")]),s._v(" "),a("p",[s._v("下面是在图片悬停时改变图片宽度的例子：")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v("<style>\n  img")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 30px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v("img:hover")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("animation-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("animation-duration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 500ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[s._v("@keyframes")]),s._v(" width")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v("100%")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 40px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n</style>\n\n<img src="),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://cdn.freecodecamp.org/curriculum/applied-visual-design/google-logo.png"')]),s._v(" alt="),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Google\'s Logo"')]),s._v(" />\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h2",{attrs:{id:"修改动画的填充模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改动画的填充模式"}},[s._v("#")]),s._v(" 修改动画的填充模式")]),s._v(" "),a("p",[s._v("太棒了，但是现在还不完美。 注意动画在 "),a("code",[s._v("500ms")]),s._v(" 之后重置了，所以按钮又变成了之前的颜色。 而我们想要的效果是按钮在悬停时始终高亮。")]),s._v(" "),a("p",[s._v("为此，我们可以通过把 "),a("code",[s._v("animation-fill-mode")]),s._v(" 设置成 "),a("code",[s._v("forwards")]),s._v(" 来实现。 "),a("code",[s._v("animation-fill-mode")]),s._v(" 指定了在动画结束时元素的样式： 你可以这样设置：")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v("animation-fill-mode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" forwards"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"使用-css-动画创建动画"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-css-动画创建动画"}},[s._v("#")]),s._v(" 使用 CSS 动画创建动画")]),s._v(" "),a("p",[s._v("在元素的 "),a("code",[s._v("position")]),s._v(" 已有指定值（如 "),a("code",[s._v("fixed")]),s._v(" 或者 "),a("code",[s._v("relative")]),s._v("）时，CSS 偏移属性 "),a("code",[s._v("right")]),s._v("、"),a("code",[s._v("left")]),s._v("、"),a("code",[s._v("top")]),s._v("、"),a("code",[s._v("bottom")]),s._v(" 可以用在动画规则里创建动作。")]),s._v(" "),a("p",[s._v("就像下面的例子展示的那样，你可以在 "),a("code",[s._v("50%")]),s._v(" keyframe 处设置 "),a("code",[s._v("top")]),s._v(" 属性为 50px，在开始（"),a("code",[s._v("0%")]),s._v("）和结束（"),a("code",[s._v("100%")]),s._v("）keyframe 处设置为 0px，以实现元素先向下运动，然后返回的动作效果。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[s._v("@keyframes")]),s._v(" rainbow")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v("0%")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("background-color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" blue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("top")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 0px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v("50%")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("background-color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" green"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("top")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 50px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v("100%")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("background-color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("top")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 0px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),a("p",[s._v("我们可以改变动画元素的 "),a("code",[s._v("opacity")]),s._v(" 属性值，使其具有渐隐的效果")])]),s._v(" "),a("h2",{attrs:{id:"使用无限的动画计数制作永不停止的动画"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用无限的动画计数制作永不停止的动画"}},[s._v("#")]),s._v(" 使用无限的动画计数制作永不停止的动画")]),s._v(" "),a("p",[s._v("之前介绍了一些动画属性以及 "),a("code",[s._v("@keyframes")]),s._v(" 规则的用法。 还有一个常用的动画属性是 "),a("code",[s._v("animation-iteration-count")]),s._v("，这个属性允许你控制动画循环的次数。 下面是一个例子：")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v("animation-iteration-count")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("在这里动画会在运行 3 次后停止，如果想让动画一直运行，可以把值设置成 "),a("code",[s._v("infinite")]),s._v("。")]),s._v(" "),a("h2",{attrs:{id:"使用关键字更改动画定时器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用关键字更改动画定时器"}},[s._v("#")]),s._v(" 使用关键字更改动画定时器")]),s._v(" "),a("p",[s._v("在 CSS 动画里，"),a("code",[s._v("animation-timing-function")]),s._v(" 用来定义动画的速度曲线。 速度曲线决定了动画从一套 CSS 样式变为另一套所用的时间。 如果要描述的动画是一辆车在指定时间内（"),a("code",[s._v("animation-duration")]),s._v("）从 A 运动到 B，那么 "),a("code",[s._v("animation-timing-function")]),s._v(" 表述的就是车在运动中的加速和减速等过程。")]),s._v(" "),a("p",[s._v("有一些预定义的关键字可用于常见的选项。 比如，默认值是 "),a("code",[s._v("ease")]),s._v("，动画以低速开始，然后加快，在结束前变慢。 其它常用的值包括 "),a("code",[s._v("ease-out")]),s._v("：动画以高速开始，以低速结束；"),a("code",[s._v("ease-in")]),s._v("，动画以低速开始，以高速结束；"),a("code",[s._v("linear")]),s._v("：动画从头到尾的速度是相同的。")]),s._v(" "),a("h2",{attrs:{id:"学习贝塞尔曲线的原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#学习贝塞尔曲线的原理"}},[s._v("#")]),s._v(" 学习贝塞尔曲线的原理")]),s._v(" "),a("p",[s._v("上一节，我们介绍了 "),a("code",[s._v("animation-timing-function")]),s._v(" 以及它的一些预设值，这些值定义了不同时间内的动画速度。 除了预定义值之外，CSS 还提供了贝塞尔曲线（Bezier curves）来更细致地控制动画的速度曲线。")]),s._v(" "),a("p",[s._v("在 CSS 动画里，我们可以用 "),a("code",[s._v("cubic-bezier")]),s._v(" 来定义贝塞尔曲线。 曲线的形状代表了动画的速度。 曲线在 1 * 1 的坐标系统内， 其中 X 轴代表动画的时间间隔（类似于时间比例尺），Y 轴代表动画的改变。")]),s._v(" "),a("p",[a("code",[s._v("cubic-bezier")]),s._v(" 函数包含了 1 * 1 网格里的4个点："),a("code",[s._v("p0")]),s._v("、"),a("code",[s._v("p1")]),s._v("、"),a("code",[s._v("p2")]),s._v("、"),a("code",[s._v("p3")]),s._v("。 其中 "),a("code",[s._v("p0")]),s._v(" 和 "),a("code",[s._v("p3")]),s._v(" 是固定值，代表曲线的起始点和结束点，坐标值依次为 (0, 0) 和 (1, 1)。 你只需设置另外两点的 x 值和 y 值，设置的这两点确定了曲线的形状从而确定了动画的速度曲线。 在 CSS 里面通过 "),a("code",[s._v("(x1, y1, x2, y2)")]),s._v(" 来确定 "),a("code",[s._v("p1")]),s._v(" 和 "),a("code",[s._v("p2")]),s._v("。 以下就是 CSS 贝塞尔曲线的例子：")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v("animation-timing-function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cubic-bezier")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0.25"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 0.25"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 0.75"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 0.75"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("在上面的例子里，两个点的 x 和 y 值相等（x1 = 0.25 = y1 和 x2 = 0.75 = y2）。如果你还记得几何课的知识，结果是从原点到点 (1, 1) 的一条直线。 元素在动画中的速度呈线性，效果和使用 "),a("code",[s._v("linear")]),s._v(" 关键词的效果一致。 换言之，元素匀速运动。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("更多")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://www.runoob.com/css3/css3-animations.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("CSS3 动画 | 菜鸟教程 (runoob.com)"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports}}]);